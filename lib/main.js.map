{"version":3,"sources":["../src/main.js"],"names":["electron","require","app","BrowserWindow","path","url","mainWindow","createWindow","width","height","loadURL","format","pathname","join","__dirname","protocol","slashes","on","process","platform","quit"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA;AACA,IAAMC,MAAMF,SAASE,GAArB;AACA;AACA,IAAMC,gBAAgBH,SAASG,aAA/B;;AAEA,IAAMC,OAAOH,QAAQ,MAAR,CAAb;AACA,IAAMI,MAAMJ,QAAQ,KAAR,CAAZ;;AAEA;AACA;AACA,IAAIK,mBAAJ;;AAEA,SAASC,YAAT,GAAwB;AACvB;AACAD,cAAa,IAAIH,aAAJ,CAAkB,EAAEK,OAAO,GAAT,EAAcC,QAAQ,GAAtB,EAAlB,CAAb;;AAEA;AACAH,YAAWI,OAAX,CACCL,IAAIM,MAAJ,CAAW;AACVC,YAAUR,KAAKS,IAAL,CAAUC,SAAV,EAAqB,eAArB,CADA;AAEVC,YAAU,OAFA;AAGVC,WAAS;AAHC,EAAX,CADD;;AAQA;AACA;;AAEA;AACAV,YAAWW,EAAX,CAAc,QAAd,EAAwB,YAAW;AAClC;AACA;AACA;AACAX,eAAa,IAAb;AACA,EALD;AAMA;;AAED;AACA;AACA;AACAJ,IAAIe,EAAJ,CAAO,OAAP,EAAgBV,YAAhB;;AAEA;AACAL,IAAIe,EAAJ,CAAO,mBAAP,EAA4B,YAAW;AACtC;AACA;AACA,KAAIC,QAAQC,QAAR,KAAqB,QAAzB,EAAmC;AAClCjB,MAAIkB,IAAJ;AACA;AACD,CAND;;AAQAlB,IAAIe,EAAJ,CAAO,UAAP,EAAmB,YAAW;AAC7B;AACA;AACA,KAAIX,eAAe,IAAnB,EAAyB;AACxBC;AACA;AACD,CAND;;AAQA;AACA","file":"main.js","sourcesContent":["const electron = require('electron');\n// Module to control application life.\nconst app = electron.app;\n// Module to create native browser window.\nconst BrowserWindow = electron.BrowserWindow;\n\nconst path = require('path');\nconst url = require('url');\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow;\n\nfunction createWindow() {\n\t// Create the browser window.\n\tmainWindow = new BrowserWindow({ width: 800, height: 600 });\n\n\t// and load the index.html of the app.\n\tmainWindow.loadURL(\n\t\turl.format({\n\t\t\tpathname: path.join(__dirname, 'ui/index.html'),\n\t\t\tprotocol: 'file:',\n\t\t\tslashes: true,\n\t\t}),\n\t);\n\n\t// Open the DevTools.\n\t// mainWindow.webContents.openDevTools()\n\n\t// Emitted when the window is closed.\n\tmainWindow.on('closed', function() {\n\t\t// Dereference the window object, usually you would store windows\n\t\t// in an array if your app supports multi windows, this is the time\n\t\t// when you should delete the corresponding element.\n\t\tmainWindow = null;\n\t});\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow);\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function() {\n\t// On OS X it is common for applications and their menu bar\n\t// to stay active until the user quits explicitly with Cmd + Q\n\tif (process.platform !== 'darwin') {\n\t\tapp.quit();\n\t}\n});\n\napp.on('activate', function() {\n\t// On OS X it's common to re-create a window in the app when the\n\t// dock icon is clicked and there are no other windows open.\n\tif (mainWindow === null) {\n\t\tcreateWindow();\n\t}\n});\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\n"]}